{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length","1","module","_this","this","d","document","region","itemBox","querySelectorAll","summCont","querySelector","select","getSummData_","JSON","parse","localStorage","getItem","setSummData_","obj","setItem","stringify","deleteSummData_","removeItem","addEvent_","elem","type","handler","addEventListener","plusItem_","summData","parentBox","target","parentNode","itemId","getAttribute","itemTitle","innerHTML","itemPrice","itemWeight","count","hasOwnProperty","summary_","removeItem_","countWrap","parseInt","itemChecked","checked","style","display","classList","remove","resultWrap","addItem_","Object","keys","addons","delItem_","unique_","arr","result","nextInput","str","j","push","totalItems","totalPrice","totalWeight","shippingFee","summ","xhr","XMLHttpRequest","open","responseType","readyState","items","data","response","parseFloat","rewardTiers","Math","ceil","forEach","el","weight","key","_key","rewardAddons","pledge","fee","summary","send","events_","add","selectedIndex","init_","2","$","click","animate","scrollTop","position","top","3","../components/items/script.js","../components/results/regions.js"],"mappings":"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","file":"../../../main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nfunction Calculator() {\n    var _this = this;\n\n    var d = document,\n        region = void 0;\n    this.itemBox = d.querySelectorAll(\".itembox\");\n    this.summCont = d.querySelector('.results');\n    this.select = d.querySelector(\".region__select\");\n\n    this.getSummData_ = function () {\n        return JSON.parse(localStorage.getItem('summ'));\n    };\n\n    this.setSummData_ = function (obj) {\n        localStorage.setItem('summ', JSON.stringify(obj));\n        return false;\n    };\n\n    this.deleteSummData_ = function () {\n        return localStorage.removeItem('summ');\n    };\n\n    this.addEvent_ = function (elem, type, handler) {\n        elem.addEventListener(type, handler, false);\n        return false;\n    };\n\n    this.plusItem_ = function (e) {\n        _this.summData = _this.getSummData_() || {};\n        _this.parentBox = e.target.parentNode.parentNode;\n        _this.itemId = _this.parentBox.querySelector('.item__add').getAttribute('data-id');\n        _this.itemTitle = _this.parentBox.querySelector('.item__title').innerHTML;\n        _this.itemPrice = _this.parentBox.querySelector('.item__add').getAttribute('price');\n        _this.itemWeight = _this.parentBox.querySelector('.item__add').getAttribute('weight');\n        _this.count = _this.parentBox.querySelector(\".addon__count\");\n        if (_this.summData.hasOwnProperty(_this.itemId)) {\n            _this.summData[_this.itemId][3]++;\n        } else {\n            _this.summData[_this.itemId] = [_this.itemTitle, _this.itemPrice, _this.itemWeight, 1];\n        }\n        if (!_this.setSummData_(_this.summData)) {\n            _this.count.innerHTML = \"\" + _this.summData[_this.itemId][3];\n        }\n        _this.summary_();\n        return false;\n    };\n\n    this.removeItem_ = function (e) {\n        _this.summData = _this.getSummData_();\n        _this.parentBox = e.target.parentNode.parentNode;\n        _this.itemId = _this.parentBox.querySelector('.item__add').getAttribute('data-id');\n        _this.itemTitle = _this.parentBox.querySelector('.item__title').innerHTML;\n        _this.itemPrice = _this.parentBox.querySelector('.item__add').getAttribute('price');\n        _this.itemWeight = _this.parentBox.querySelector('.item__add').getAttribute('weight');\n        _this.count = _this.parentBox.querySelector(\".addon__count\");\n        _this.countWrap = _this.parentBox.querySelector('.counter-wrap');\n        if (_this.summData.hasOwnProperty(_this.itemId) && parseInt(_this.summData[_this.itemId][3]) >= 1) {\n            _this.summData[_this.itemId][3]--;\n        }\n        if (_this.summData.hasOwnProperty(_this.itemId) && parseInt(_this.summData[_this.itemId][3]) < 1) {\n            _this.itemChecked = _this.parentBox.querySelector('.item__add');\n            _this.itemChecked.checked = false;\n            _this.countWrap.style.display = 'none';\n            _this.parentBox.classList.remove(\"itembox--active\");\n            _this.parentBox.querySelector('.item__checked').style.display = 'none';\n            _this.resultWrap = d.querySelector('.result__block');\n            _this.resultWrap.style.display = 'none';\n            delete _this.summData[_this.itemId];\n        }\n        if (!_this.setSummData_(_this.summData)) {\n            if (_this.countWrap.style.display === 'flex') {\n                _this.count.innerHTML = \"\" + _this.summData[_this.itemId][3];\n            }\n        }\n        _this.summary_();\n        return false;\n    };\n\n    this.addItem_ = function (e) {\n        _this.summData = _this.getSummData_() || {};\n        _this.parentBox = e.target.parentNode;\n        _this.itemId = _this.parentBox.querySelector('.item__add').getAttribute('data-id');\n        _this.itemTitle = _this.parentBox.querySelector('.item__title').innerHTML;\n        _this.itemPrice = _this.parentBox.querySelector('.item__add').getAttribute('price');\n        _this.itemWeight = _this.parentBox.querySelector('.item__add').getAttribute('weight');\n        _this.count = _this.parentBox.querySelector(\".addon__count\");\n        if (_this.summData.hasOwnProperty(_this.itemId)) {\n            if (e.target.getAttribute(\"type\") == \"radio\") {} else if (e.target.getAttribute(\"type\") == \"checkbox\") {\n                e.target.checked = false;\n                _this.countWrap = _this.parentBox.querySelector('.counter-wrap');\n                _this.countWrap.style.display = 'none';\n                delete _this.summData[_this.itemId];\n            }\n        } else {\n            if (e.target.getAttribute(\"type\") == \"radio\") {\n                delete _this.summData[Object.keys(_this.summData)[0]];\n                _this.summData[_this.itemId] = [_this.itemTitle, _this.itemPrice, _this.itemWeight, 1];\n                _this.addons = d.querySelector('.addons');\n                _this.addons.style.display = 'block';\n            } else if (e.target.getAttribute(\"type\") == \"checkbox\") {\n                _this.summData[_this.itemId] = [_this.itemTitle, _this.itemPrice, _this.itemWeight, 1];\n                _this.countWrap = _this.parentBox.querySelector('.counter-wrap');\n                _this.countWrap.style.display = 'flex';\n                _this.resultWrap = d.querySelector('.result__block');\n                _this.resultWrap.style.display = 'block';\n            }\n        }\n        if (!_this.setSummData_(_this.summData)) {\n            if (_this.count) {\n                _this.count.innerHTML = \"\" + _this.summData[_this.itemId][3];\n            }\n        }\n        _this.summary_();\n        return false;\n    };\n\n    this.delItem_ = function (e) {\n        _this.summData = _this.getSummData_();\n        _this.parentBox = e.target.parentNode;\n        _this.itemId = e.target.getAttribute('data-id');\n        _this.count = _this.parentBox.querySelector(\".addon__count\");\n        if (_this.summData.hasOwnProperty(_this.itemId)) {\n            if (e.target.getAttribute(\"type\") == \"checkbox\") {\n                _this.countWrap = _this.parentBox.querySelector('.counter-wrap');\n                _this.countWrap.style.display = 'none';\n                _this.resultWrap = d.querySelector('.result__block');\n                _this.resultWrap.style.display = 'none';\n                delete _this.summData[_this.itemId];\n            }\n            if (!_this.setSummData_(_this.summData)) {\n                if (_this.count.style.display === 'flex') {\n                    _this.count.innerHTML = \"\" + _this.summData[_this.itemId][3];\n                }\n            }\n        }\n        _this.summary_();\n        return false;\n    };\n\n    this.unique_ = function (arr) {\n        var result = [];\n        nextInput: for (var i = 0; i < arr.length; i++) {\n            var str = arr[i]; // для каждого элемента\n            for (var j = 0; j < result.length; j++) {\n                // ищем, был ли он уже?\n                if (result[j] == str) continue nextInput; // если да, то следующий\n            }\n            result.push(str);\n        }\n        return result;\n    };\n\n    this.summary_ = function () {\n        _this.summData = _this.getSummData_();\n        _this.totalItems = '';\n        _this.totalPrice = 0;\n        _this.totalWeight = 0;\n        _this.shippingFee = 0;\n        _this.summ = 0;\n        _this.arr = [];\n        _this.xhr = new XMLHttpRequest();\n        _this.xhr.open('GET', 'weight.json');\n        _this.xhr.responseType = 'json';\n        _this.xhr.addEventListener('load', function () {\n            if (_this.xhr.readyState === 4) {\n                _this.data = _this.xhr.response;\n                for (var items in _this.summData) {\n                    _this.totalPrice += parseInt(_this.summData[items][1] * _this.summData[items][3]);\n                    _this.totalWeight += parseFloat(_this.summData[items][2] * _this.summData[items][3]);\n                    if (items === Object.keys(_this.summData)[0]) {\n                        _this.rewardTiers = d.querySelector('.reward-tiers__items');\n                        _this.rewardTiers.innerHTML = '';\n                        _this.rewardTiers.innerHTML = \"\" + _this.summData[items][0];\n                    } else {\n                        _this.arr.push(_this.summData[items][0]);\n                    }\n                }\n                _this.totalWeight = Math.ceil(_this.totalWeight);\n                _this.data.forEach(function (el) {\n                    if (_this.totalWeight === parseInt(el.weight)) {\n                        for (var key in el) {\n                            if (region === key) {\n                                _this.shippingFee = el[key];\n                            }\n                        }\n                    } else if (Math.ceil(_this.totalWeight) >= parseInt(el.weight)) {\n                        for (var _key in el) {\n                            if (region === _key && _key === 'USACanada') {\n                                _this.shippingFee = 144;\n                            } else if (region === _key && _key === 'EU') {\n                                _this.shippingFee = 144;\n                            } else if (region === _key && _key === 'rotw') {\n                                _this.shippingFee = 168;\n                            }\n                        }\n                    }\n                });\n            }\n            _this.rewardAddons = d.querySelector('.add-ons__items');\n            _this.rewardAddons.innerHTML = _this.unique_(_this.arr) + \";\";\n            _this.weight = d.querySelector(\".weight\");\n            _this.pledge = d.querySelector(\".pledge\");\n            _this.fee = d.querySelector(\".fee\");\n            _this.summary = d.querySelector(\".summary\");\n            _this.summ = _this.totalPrice + parseInt(_this.shippingFee);\n            _this.weight.innerHTML = _this.totalWeight + \"kg\";\n            _this.pledge.innerHTML = \"$\" + _this.totalPrice;\n            _this.fee.innerHTML = \"$\" + _this.shippingFee;\n            _this.summary.innerHTML = \"$\" + _this.summ;\n        });\n        _this.xhr.send();\n    };\n\n    this.events_ = function () {\n        d.addEventListener('DOMContentLoaded', function () {\n            _this.deleteSummData_();\n        });\n        d.addEventListener('change', function () {\n            for (var i = 0; i < _this.itemBox.length; i++) {\n                if (_this.itemBox[i].querySelector(\".item__add\").checked) {\n                    _this.itemBox[i].classList.remove(\"itembox--inactive\");\n                    _this.itemBox[i].classList.add(\"itembox--active\");\n                    _this.itemBox[i].querySelector('.item__checked').style.display = 'block';\n                } else if (!_this.itemBox[i].querySelector(\".item__add\").checked && _this.itemBox[i].querySelector(\".item__add\").getAttribute(\"type\") == \"radio\") {\n                    _this.itemBox[i].classList.remove(\"itembox--active\");\n                    _this.itemBox[i].classList.add(\"itembox--inactive\");\n                    _this.itemBox[i].querySelector('.item__checked').style.display = 'none';\n                } else if (!_this.itemBox[i].querySelector(\".item__add\").checked) {\n                    _this.itemBox[i].classList.remove(\"itembox--active\");\n                    _this.itemBox[i].querySelector('.item__checked').style.display = 'none';\n                }\n            }\n        });\n        _this.select.addEventListener(\"change\", function () {\n            region = _this.select.querySelectorAll('option')[_this.select.selectedIndex].getAttribute(\"region\");\n            _this.summCont.style.display = 'block';\n            _this.summary_();\n        });\n        for (var i = 0; i < _this.itemBox.length; i++) {\n            _this.addEvent_(_this.itemBox[i].querySelector(\".item__add\"), 'click', function (e) {\n                if (e.target.checked) {\n                    _this.addItem_(e);\n                } else if (!e.target.checked) {\n                    _this.delItem_(e);\n                }\n            });\n            if (_this.itemBox[i].querySelector(\".item__plus\")) {\n                _this.addEvent_(_this.itemBox[i].querySelector(\".item__plus\"), 'click', function (e) {\n                    _this.plusItem_(e);\n                });\n            }\n            if (_this.itemBox[i].querySelector(\".item__remove\")) {\n                _this.addEvent_(_this.itemBox[i].querySelector(\".item__remove\"), 'click', function (e) {\n                    _this.removeItem_(e);\n                });\n            }\n        }\n    };\n\n    this.init_ = function () {\n        _this.events_();\n    };\n    this.init_();\n}\n\nvar calculate = new Calculator();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n$(function () {\n\t$('.item__add').click(function (e) {\n\t\tif (e.target.getAttribute(\"type\") == \"radio\") {\n\t\t\t$('html, body').animate({ scrollTop: $('.addons').position().top }, 500);\n\t\t}\n\t});\n\t//$('.region__select').styler();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lvbnMuanMiXSwibmFtZXMiOlsiJCIsImNsaWNrIiwiZSIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJwb3NpdGlvbiIsInRvcCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsRUFBRSxZQUFXO0FBQ1pBLEdBQUUsWUFBRixFQUFnQkMsS0FBaEIsQ0FBc0IsVUFBU0MsQ0FBVCxFQUFXO0FBQ2hDLE1BQUlBLEVBQUVDLE1BQUYsQ0FBU0MsWUFBVCxDQUFzQixNQUF0QixLQUFpQyxPQUFyQyxFQUE2QztBQUN2Q0osS0FBRSxZQUFGLEVBQWdCSyxPQUFoQixDQUF3QixFQUFDQyxXQUFVTixFQUFFLFNBQUYsRUFBYU8sUUFBYixHQUF3QkMsR0FBbkMsRUFBeEIsRUFBaUUsR0FBakU7QUFDTDtBQUNELEVBSkQ7QUFLQztBQUNELENBUEQiLCJmaWxlIjoicmVnaW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZnVuY3Rpb24oKSB7XHJcblx0JCgnLml0ZW1fX2FkZCcpLmNsaWNrKGZ1bmN0aW9uKGUpe1xyXG5cdFx0aWYgKGUudGFyZ2V0LmdldEF0dHJpYnV0ZShcInR5cGVcIikgPT0gXCJyYWRpb1wiKXtcclxuXHQgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDokKCcuYWRkb25zJykucG9zaXRpb24oKS50b3B9LCA1MDApO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG4gIC8vJCgnLnJlZ2lvbl9fc2VsZWN0Jykuc3R5bGVyKCk7XHJcbn0pOyJdfQ==\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"../components/results/regions.js\");\n\nrequire(\"../components/items/script.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfNjI1YWQxZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSIsImZpbGUiOiJmYWtlXzYyNWFkMWVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY29tcG9uZW50cy9yZXN1bHRzL3JlZ2lvbnMuanNcIjtcclxuLy8gaW1wb3J0IFwiLi4vY29tcG9uZW50cy9pdGVtcy9tb2RhbC5qc1wiO1xyXG5pbXBvcnQgXCIuLi9jb21wb25lbnRzL2l0ZW1zL3NjcmlwdC5qc1wiO1xyXG4iXX0=\n},{\"../components/items/script.js\":1,\"../components/results/regions.js\":2}]},{},[3])\n//# sourceMappingURL=data:application/json;base64,\n"]}